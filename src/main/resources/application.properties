spring.application.name=portfolio
server.port=443
# JPA properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


##production configurations
#docker datasource
spring.datasource.url=jdbc:mysql://database:3306/portfolio_db
spring.config.import=file:secrets.properties
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
server.ssl.enabled=true
server.ssl.key-store-type=pkcs12
server.ssl.key-store=ssl/pkcs.p12
server.ssl.key-store-password=${KEYSTORE_PASSWORD}
server.ssl.keyAlias=springboot

##development configurations
#local datasource
# spring.datasource.url=jdbc:mysql://localhost:3306/portfolio_db
# spring.config.import=file:secrets.properties
# spring.datasource.username=${DATABASE_USERNAME}
# spring.datasource.password=${DATABASE_PASSWORD}
# server.ssl.enabled=false





# NOTES FOR AUTH VARIABLE STORAGE
# Environment variables are stored in the etc/profile.local file.

#ssl configuration notes
#at ssl/pkcs.p12, generate a keystore file from the files in /etc/letsencrypt/live/jkopecky.dev
#use the readme in /etc/letsencrypt/live/ as a reference for what files are what.
#ignore the following two lines, these are references for the locations of where the ssl files are auto generated.
# server.ssl.certificate=/etc/letsencrypt/live/jkopecky.dev/fullchain.pem
# server.ssl.certificate-private-key=/etc/letsencrypt/live/jkopecky.dev/privkey.pem